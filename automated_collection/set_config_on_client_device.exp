#!/usr/bin/expect -f


############# CONFIGURATION ##########################

# load the variables passed to the file
set current_config [lindex $argv 0]
set tick_port [lindex $argv 1]

# folder path of current file
set SCRIPT_DIR [file dirname [file normalize $argv0]]
set CONFIG_FOLDER_PATH "$SCRIPT_DIR/../config"

# load folder paths
set tick_remote_shell_folder [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$tick_remote_shell_folder"]
set client_config_folder [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$client_config_folder"]
set anaconda_path [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$anaconda_location"]

######################################################



puts "\r ** SETTING CONFIG ON CLIENT DEVICE **\r\n"

# Activate the Conda environment within Expect
spawn bash 
send "source $anaconda_path/activate py27\r"
expect "$ "

# change config locally
send "echo '{\"current_configuration\":\"$current_config\"}' > ../config/current_configuration.json\r"
expect "$ "

# start tick console
send "python $tick_remote_shell_folder/tick.py -p $tick_port\r"
expect "$ "


# wait until bot has connected
set timeout 35
expect {
    -re {Bot [0-9]+ \[[^\]]+\] connected from [0-9.]+} {
        puts "\r✅ Bot connected.\r"
    }
    timeout {
        puts "\r❌ Timeout waiting for bot connection.\r"
        exit 1
    }
}
sleep 5
set timeout 10

# select bot 0 to work with
send "use 0\r"
expect {
	-re {\[Bot.*\]} {
		puts "connected to bot"
	}
}

# start interactive shell
send "shell\r"
sleep 5

# set configuration in config file on client device
send "echo '{\"current_config\":\"$current_config\"}' > $client_config_folder/current_configuration.json\r"

puts "\rconfiguration <$current_config> set on client device\r"

