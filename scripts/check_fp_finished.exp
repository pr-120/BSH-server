#!/usr/bin/expect -f


############# CONFIGURATION ##########################

# load the variable passed to the file
set tick_port [lindex $argv 0]

# folder path of current file
set SCRIPT_DIR [file dirname [file normalize $argv0]]
set CONFIG_FOLDER_PATH "$SCRIPT_DIR/../config"

# load folder paths
set tick_remote_shell_folder [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$tick_remote_shell_folder"]
set client_config_folder [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$client_config_folder"]
set anaconda_path [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$anaconda_location"]

######################################################



puts "\r ** CHECKING FOR FP FINISHED **\r\n"

# Activate the Conda environment within Expect
spawn bash 
send "source $anaconda_path/activate py27\r"
expect "$ "

# start tick console
send "python $tick_remote_shell_folder/tick.py -p $tick_port\r"
expect "$ "


# wait until bot has connected
set timeout 35
expect {
    -re {Bot [0-9]+ \[[^\]]+\] connected from [0-9.]+} {
        puts "\r✅ Bot connected.\r"
    }
    timeout {
        puts "\r❌ Timeout waiting for bot connection.\r"
        exit 1
    }
}
sleep 5


# select bot 0 to work with
send "use 0\r"
expect "$ "

while {1 > 0} {
	send "exec cat $client_config_folder/fp_done.flag\r"
	set timeout 10
	
        expect {
		"fp finished successfully" {
			puts "\rfingerprinting finished, stopping malicious behavior\r"
			send "\003\r"
			exit 0
		}
		timeout {
			puts "\rfp still running \r"
		}
   	}
}

