#!/usr/bin/expect -f

############# CONFIGURATION ##########################

# load the variables passed to the file
set number_of_fingerprints_to_be_made [lindex $argv 0]


# folder path of current file
set SCRIPT_DIR [file dirname [file normalize $argv0]]
set CONFIG_FOLDER_PATH "$SCRIPT_DIR/../config"

# load folder paths
set tick_remote_shell_folder [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$tick_remote_shell_folder"]
set fingerprinting_folder [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$fingerprinting_folder"]
set anaconda_path [exec bash -c "source \"$CONFIG_FOLDER_PATH/folder_paths.config\" && echo \$anaconda_location"]

######################################################



puts "\r ** START FINGERPRINTING ON CLIENT DEVICE ** \r\n"

# Activate the Conda environment within Expect
spawn bash 
send "source ~/anaconda3/bin/activate py27\r"
expect "$ "

# start tick console
send "python $tick_remote_shell_folder/tick.py \r"
expect "$ "


# wait until bot has connected
set timeout 35
expect {
    -re {Bot [0-9]+ \[[^\]]+\] connected from [0-9.]+} {
        puts "\r✅ Bot connected.\r"
    }
    timeout {
        puts "\r❌ Timeout waiting for bot connection.\r"
        exit 1
    }
}
sleep 5
set timeout 10

# select bot 0 to work with
send "use 0\r"
expect "$ "

# make sure that fingerprinting file can be executed
send "chmod $fingerprinting_folder/fingerprinter.sh 777\r"
#expect -re {\[Bot.*\]}

# starts interactive shell inside tick console
send "shell\r"	
sleep 5

puts "\rreached shell\r"

# start fingerprinting in screen on client device, makes sure the script stays running after leaving the shell
puts $fingerprinting_folder
send "sudo screen -dmS fingerprinting bash $fingerprinting_folder/fingerprinter.sh -n $number_of_fingerprints_to_be_made\r"
sleep 5
puts "\rfingerprinting started\r"

